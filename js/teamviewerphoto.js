// TEAMVIEWER EXPERIMENTS GALLERY SCRIPT
console.log('üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ TeamViewer Experiments Script...');

// –î–ê–ù–ù–´–ï –ì–ê–õ–ï–†–ï–ô
// –ì–∞–ª–µ—Ä–µ—è 1 - –ë—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ (2 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
let currentImageIndexClipboard = 0;
const imageDataClipboard = [
    {
        src: '../izobr/teamviewer/copy-local.png',
        alt: '–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞',
        description: '–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ'
    },
    {
        src: '../izobr/teamviewer/copy-remote.png',
        alt: '–í—Å—Ç–∞–≤–∫–∞ –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞',
        description: '–í—Å—Ç–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ —á–µ—Ä–µ–∑ TeamViewer'
    }
];

// –ì–∞–ª–µ—Ä–µ—è 2 - –ü–µ—Ä–µ–¥–∞—á–∞ —Ñ–∞–π–ª–æ–≤ (3 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
let currentImageIndexFileTransfer = 0;
const imageDataFileTransfer = [
    {
        src: '../izobr/teamviewer/before-drag.png',
        alt: '–ü–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ–º',
        description: '–ü–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ–º —Ñ–∞–π–ª–∞ –≤ TeamViewer'
    },
    {
        src: '../izobr/teamviewer/after-drag.png',
        alt: '–ü–æ—Å–ª–µ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è',
        description: '–ü–æ—Å–ª–µ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –º–µ–∂–¥—É –ª–æ–∫–∞–ª—å–Ω—ã–º –∏ —É–¥–∞–ª–µ–Ω–Ω—ã–º –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º'
    },
    {
        src: '../izobr/teamviewer/all-file.png',
        alt: '–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–∞',
        description: '–£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º'
    }
];

// –ì–∞–ª–µ—Ä–µ—è 3 - –§–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä (2 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
let currentImageIndexFileManager = 0;
const imageDataFileManager = [
    {
        src: '../izobr/teamviewer/file-interface.png',
        alt: '–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ñ–∞–π–ª–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞',
        description: '–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ TeamViewer'
    },
    {
        src: '../izobr/teamviewer/proceed.png',
        alt: '–ü—Ä–æ–≥—Ä–µ—Å—Å –º–∞—Å—Å–æ–≤–æ–π –ø–µ—Ä–µ–¥–∞—á–∏',
        description: '–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–∏ –º–∞—Å—Å–æ–≤–æ–π –ø–µ—Ä–µ–¥–∞—á–µ —Ñ–∞–π–ª–æ–≤'
    }
];

// –ì–∞–ª–µ—Ä–µ—è 4 - –ö–æ–º–±–∏–Ω–∞—Ü–∏–∏ –∫–ª–∞–≤–∏—à (4 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
let currentImageIndexKeyCombo = 0;
const imageDataKeyCombo = [
    {
        src: '../izobr/teamviewer/hotkey-menu.png',
        alt: '–ú–µ–Ω—é –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à',
        description: '–ú–µ–Ω—é "–ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏" –≤ TeamViewer –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π –∫–ª–∞–≤–∏—à'
    },
    {
        src: '../izobr/teamviewer/afterctrl-al-del.png',
        alt: '–°—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã Ctrl+Alt+Del',
        description: '–°—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ Ctrl+Alt+Del –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ'
    },
    {
        src: '../izobr/teamviewer/lock-menu.png',
        alt: '–í—ã–±–æ—Ä –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ Windows',
        description: '–í—ã–±–æ—Ä –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ Windows –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ'
    },
    {
        src: '../izobr/teamviewer/lock-screen.png',
        alt: '–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —ç–∫—Ä–∞–Ω–∞',
        description: '–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —ç–∫—Ä–∞–Ω–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ'
    }
];

// –ì–∞–ª–µ—Ä–µ—è 5 - –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å (3 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
let currentImageIndexSecurity = 0;
const imageDataSecurity = [
    {
        src: '../izobr/teamviewer/easy-connect.png',
        alt: '–ë—ã—Å—Ç—Ä–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–∑–≤–µ—Å—Ç–Ω–æ–º—É –ü–ö',
        description: '–ë—ã—Å—Ç—Ä–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–∑–≤–µ—Å—Ç–Ω–æ–º—É –ü–ö'
    },
    {
        src: '../izobr/teamviewer/random-password.png',
        alt: '–°–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å',
        description: '–°–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —É–¥–∞–ª–µ–Ω–Ω–æ–º—É –∫–æ–º–ø—å—é—Ç–µ—Ä—É'
    },
    {
        src: '../izobr/teamviewer/white-list.png',
        alt: '–ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫',
        description: '–ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ —É–¥–∞–ª–µ–Ω–Ω–æ–º—É –∫–æ–º–ø—å—é—Ç–µ—Ä—É'
    }
];

// –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ì–ê–õ–ï–†–ï–ò SECURITY (5-–π —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç)
function goToImageSecurity(index) {
    if (index >= 0 && index < imageDataSecurity.length) {
        currentImageIndexSecurity = index;
        updateGallerySecurity();
        console.log('Security –≥–∞–ª–µ—Ä–µ—è: –ø–µ—Ä–µ—Ö–æ–¥ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é', index + 1);
    }
}

function changeImageSecurity(direction) {
    if (direction === 'next') {
        currentImageIndexSecurity = (currentImageIndexSecurity + 1) % imageDataSecurity.length;
    } else {
        currentImageIndexSecurity = (currentImageIndexSecurity - 1 + imageDataSecurity.length) % imageDataSecurity.length;
    }
    updateGallerySecurity();
    console.log('Security –≥–∞–ª–µ—Ä–µ—è: –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞', direction, '- —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å:', currentImageIndexSecurity);
}

function updateGallerySecurity() {
    const mainImage = document.getElementById('mainImageSecurity');
    const description = document.getElementById('imageDescriptionSecurity');
    const currentCounter = document.getElementById('currentImageSecurity');
    const thumbnails = document.querySelectorAll('.thumbnail-security');

    if (mainImage && imageDataSecurity[currentImageIndexSecurity]) {
        // –ü–ª–∞–≤–Ω–∞—è —Å–º–µ–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        mainImage.style.opacity = '0.3';
        setTimeout(() => {
            mainImage.src = imageDataSecurity[currentImageIndexSecurity].src;
            mainImage.alt = imageDataSecurity[currentImageIndexSecurity].alt;
            mainImage.style.opacity = '1';
        }, 150);
        
        if (description) {
            description.textContent = imageDataSecurity[currentImageIndexSecurity].description;
        }
        
        if (currentCounter) {
            currentCounter.textContent = currentImageIndexSecurity + 1;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –º–∏–Ω–∏–∞—Ç—é—Ä—É
        thumbnails.forEach((thumb, index) => {
            if (index === currentImageIndexSecurity) {
                thumb.style.border = '2px solid #fd7e14';
                thumb.style.opacity = '1';
                thumb.classList.add('active');
            } else {
                thumb.style.border = '2px solid transparent';
                thumb.style.opacity = '0.7';
                thumb.classList.remove('active');
            }
        });
    }
}

function toggleZoomSecurity(img) {
    if (img.style.transform === 'scale(1.8)') {
        img.style.transform = 'scale(1)';
        img.style.cursor = 'pointer';
        img.style.zIndex = '1';
    } else {
        img.style.transform = 'scale(1.8)';
        img.style.cursor = 'zoom-out';
        img.style.zIndex = '100';
        img.style.transformOrigin = 'center';
    }
}

// –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ì–ê–õ–ï–†–ï–ò KEY COMBO (4-–π —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç)
function goToImageKeyCombo(index) {
    if (index >= 0 && index < imageDataKeyCombo.length) {
        currentImageIndexKeyCombo = index;
        updateGalleryKeyCombo();
        console.log('KeyCombo –≥–∞–ª–µ—Ä–µ—è: –ø–µ—Ä–µ—Ö–æ–¥ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é', index + 1);
    }
}

function changeImageKeyCombo(direction) {
    if (direction === 'next') {
        currentImageIndexKeyCombo = (currentImageIndexKeyCombo + 1) % imageDataKeyCombo.length;
    } else {
        currentImageIndexKeyCombo = (currentImageIndexKeyCombo - 1 + imageDataKeyCombo.length) % imageDataKeyCombo.length;
    }
    updateGalleryKeyCombo();
    console.log('KeyCombo –≥–∞–ª–µ—Ä–µ—è: –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞', direction, '- —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å:', currentImageIndexKeyCombo);
}

function updateGalleryKeyCombo() {
    const mainImage = document.getElementById('mainImageKeyCombo');
    const description = document.getElementById('imageDescriptionKeyCombo');
    const currentCounter = document.getElementById('currentImageKeyCombo');
    const thumbnails = document.querySelectorAll('.thumbnail-keycombo');

    if (mainImage && imageDataKeyCombo[currentImageIndexKeyCombo]) {
        // –ü–ª–∞–≤–Ω–∞—è —Å–º–µ–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        mainImage.style.opacity = '0.3';
        setTimeout(() => {
            mainImage.src = imageDataKeyCombo[currentImageIndexKeyCombo].src;
            mainImage.alt = imageDataKeyCombo[currentImageIndexKeyCombo].alt;
            mainImage.style.opacity = '1';
        }, 150);
        
        if (description) {
            description.textContent = imageDataKeyCombo[currentImageIndexKeyCombo].description;
        }
        
        if (currentCounter) {
            currentCounter.textContent = currentImageIndexKeyCombo + 1;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –º–∏–Ω–∏–∞—Ç—é—Ä—É
        thumbnails.forEach((thumb, index) => {
            if (index === currentImageIndexKeyCombo) {
                thumb.style.border = '2px solid #17a2b8';
                thumb.style.opacity = '1';
                thumb.classList.add('active');
            } else {
                thumb.style.border = '2px solid transparent';
                thumb.style.opacity = '0.7';
                thumb.classList.remove('active');
            }
        });
    }
}

function toggleZoomKeyCombo(img) {
    if (img.style.transform === 'scale(1.8)') {
        img.style.transform = 'scale(1)';
        img.style.cursor = 'pointer';
        img.style.zIndex = '1';
    } else {
        img.style.transform = 'scale(1.8)';
        img.style.cursor = 'zoom-out';
        img.style.zIndex = '100';
        img.style.transformOrigin = 'center';
    }
}

// –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ì–ê–õ–ï–†–ï–ò CLIPBOARD (1-–π —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç)
function goToImageClipboard(index) {
    if (index >= 0 && index < imageDataClipboard.length) {
        currentImageIndexClipboard = index;
        updateGalleryClipboard();
        console.log('Clipboard –≥–∞–ª–µ—Ä–µ—è: –ø–µ—Ä–µ—Ö–æ–¥ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é', index + 1);
    }
}

function changeImageClipboard(direction) {
    if (direction === 'next') {
        currentImageIndexClipboard = (currentImageIndexClipboard + 1) % imageDataClipboard.length;
    } else {
        currentImageIndexClipboard = (currentImageIndexClipboard - 1 + imageDataClipboard.length) % imageDataClipboard.length;
    }
    updateGalleryClipboard();
    console.log('Clipboard –≥–∞–ª–µ—Ä–µ—è: –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞', direction, '- —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å:', currentImageIndexClipboard);
}

function updateGalleryClipboard() {
    const mainImage = document.getElementById('mainImageClipboard');
    const description = document.getElementById('imageDescriptionClipboard');
    const currentCounter = document.getElementById('currentImageClipboard');
    const thumbnails = document.querySelectorAll('.thumbnail-clipboard');

    if (mainImage && imageDataClipboard[currentImageIndexClipboard]) {
        // –ü–ª–∞–≤–Ω–∞—è —Å–º–µ–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        mainImage.style.opacity = '0.3';
        setTimeout(() => {
            mainImage.src = imageDataClipboard[currentImageIndexClipboard].src;
            mainImage.alt = imageDataClipboard[currentImageIndexClipboard].alt;
            mainImage.style.opacity = '1';
        }, 150);
        
        if (description) {
            description.textContent = imageDataClipboard[currentImageIndexClipboard].description;
        }
        
        if (currentCounter) {
            currentCounter.textContent = currentImageIndexClipboard + 1;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –º–∏–Ω–∏–∞—Ç—é—Ä—É
        thumbnails.forEach((thumb, index) => {
            if (index === currentImageIndexClipboard) {
                thumb.style.border = '2px solid #28a745';
                thumb.style.opacity = '1';
                thumb.classList.add('active');
            } else {
                thumb.style.border = '2px solid transparent';
                thumb.style.opacity = '0.7';
                thumb.classList.remove('active');
            }
        });
    }
}

function toggleZoomClipboard(img) {
    if (img.style.transform === 'scale(1.8)') {
        img.style.transform = 'scale(1)';
        img.style.cursor = 'pointer';
        img.style.zIndex = '1';
    } else {
        img.style.transform = 'scale(1.8)';
        img.style.cursor = 'zoom-out';
        img.style.zIndex = '100';
        img.style.transformOrigin = 'center';
    }
}

// –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ì–ê–õ–ï–†–ï–ò FILE TRANSFER (2-–π —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç)
function goToImageFileTransfer(index) {
    if (index >= 0 && index < imageDataFileTransfer.length) {
         currentImageIndexFileTransfer = index;
        updateGalleryFileTransfer();
        console.log('FileTransfer –≥–∞–ª–µ—Ä–µ—è: –ø–µ—Ä–µ—Ö–æ–¥ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é', index + 1);
    }
}

function changeImageFileTransfer(direction) {
    if (direction === 'next') {
        currentImageIndexFileTransfer = (currentImageIndexFileTransfer + 1) % imageDataFileTransfer.length;
    } else {
        currentImageIndexFileTransfer = (currentImageIndexFileTransfer - 1 + imageDataFileTransfer.length) % imageDataFileTransfer.length;
    }
    updateGalleryFileTransfer();
    console.log('FileTransfer –≥–∞–ª–µ—Ä–µ—è: –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞', direction, '- —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å:', currentImageIndexFileTransfer);
}

function updateGalleryFileTransfer() {
    const mainImage = document.getElementById('mainImageFileTransfer');
    const description = document.getElementById('imageDescriptionFileTransfer');
    const currentCounter = document.getElementById('currentImageFileTransfer');
    const thumbnails = document.querySelectorAll('.thumbnail-filetransfer');

    if (mainImage && imageDataFileTransfer[currentImageIndexFileTransfer]) {
        // –ü–ª–∞–≤–Ω–∞—è —Å–º–µ–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        mainImage.style.opacity = '0.3';
        setTimeout(() => {
            mainImage.src = imageDataFileTransfer[currentImageIndexFileTransfer].src;
            mainImage.alt = imageDataFileTransfer[currentImageIndexFileTransfer].alt;
            mainImage.style.opacity = '1';
        }, 150);
        
        if (description) {
            description.textContent = imageDataFileTransfer[currentImageIndexFileTransfer].description;
        }
        
        if (currentCounter) {
            currentCounter.textContent = currentImageIndexFileTransfer + 1;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –º–∏–Ω–∏–∞—Ç—é—Ä—É
        thumbnails.forEach((thumb, index) => {
            if (index === currentImageIndexFileTransfer) {
                thumb.style.border = '2px solid #dc3545';
                thumb.style.opacity = '1';
                thumb.classList.add('active');
            } else {
                thumb.style.border = '2px solid transparent';
                thumb.style.opacity = '0.7';
                thumb.classList.remove('active');
            }
        });
    }
}

function toggleZoomFileTransfer(img) {
    if (img.style.transform === 'scale(1.8)') {
        img.style.transform = 'scale(1)';
        img.style.cursor = 'pointer';
        img.style.zIndex = '1';
    } else {
        img.style.transform = 'scale(1.8)';
        img.style.cursor = 'zoom-out';
        img.style.zIndex = '100';
        img.style.transformOrigin = 'center';
    }
}

// –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ì–ê–õ–ï–†–ï–ò FILE MANAGER (3-–π —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç)
function goToImageFileManager(index) {
    if (index >= 0 && index < imageDataFileManager.length) {
        currentImageIndexFileManager = index;
        updateGalleryFileManager();
        console.log('FileManager –≥–∞–ª–µ—Ä–µ—è: –ø–µ—Ä–µ—Ö–æ–¥ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é', index + 1);
    }
}

function changeImageFileManager(direction) {
    if (direction === 'next') {
        currentImageIndexFileManager = (currentImageIndexFileManager + 1) % imageDataFileManager.length;
    } else {
        currentImageIndexFileManager = (currentImageIndexFileManager - 1 + imageDataFileManager.length) % imageDataFileManager.length;
    }
    updateGalleryFileManager();
    console.log('FileManager –≥–∞–ª–µ—Ä–µ—è: –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞', direction, '- —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å:', currentImageIndexFileManager);
}

function updateGalleryFileManager() {
    const mainImage = document.getElementById('mainImageFileManager');
    const description = document.getElementById('imageDescriptionFileManager');
    const currentCounter = document.getElementById('currentImageFileManager');
    const thumbnails = document.querySelectorAll('.thumbnail-filemanager');

    if (mainImage && imageDataFileManager[currentImageIndexFileManager]) {
        // –ü–ª–∞–≤–Ω–∞—è —Å–º–µ–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        mainImage.style.opacity = '0.3';
        setTimeout(() => {
            mainImage.src = imageDataFileManager[currentImageIndexFileManager].src;
            mainImage.alt = imageDataFileManager[currentImageIndexFileManager].alt;
            mainImage.style.opacity = '1';
        }, 150);
        
        if (description) {
            description.textContent = imageDataFileManager[currentImageIndexFileManager].description;
        }
        
        if (currentCounter) {
            currentCounter.textContent = currentImageIndexFileManager + 1;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –º–∏–Ω–∏–∞—Ç—é—Ä—É
        thumbnails.forEach((thumb, index) => {
            if (index === currentImageIndexFileManager) {
                thumb.style.border = '2px solid #6f42c1';
                thumb.style.opacity = '1';
                thumb.classList.add('active');
            } else {
                thumb.style.border = '2px solid transparent';
                thumb.style.opacity = '0.7';
                thumb.classList.remove('active');
            }
        });
    }
}

function toggleZoomFileManager(img) {
    if (img.style.transform === 'scale(1.8)') {
        img.style.transform = 'scale(1)';
        img.style.cursor = 'pointer';
        img.style.zIndex = '1';
    } else {
        img.style.transform = 'scale(1.8)';
        img.style.cursor = 'zoom-out';
        img.style.zIndex = '100';
        img.style.transformOrigin = 'center';
    }
}

// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ì–ê–õ–ï–†–ï–ô
function initializeTeamViewerGalleries() {
    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TeamViewer –≥–∞–ª–µ—Ä–µ–π...');

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–∞–ª–µ—Ä–µ–∏ Clipboard
    setTimeout(() => {
        updateGalleryClipboard();
        initGalleryControls('clipboard');
        console.log('‚úÖ –ì–∞–ª–µ—Ä–µ—è Clipboard –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }, 100);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–∞–ª–µ—Ä–µ–∏ FileTransfer
    setTimeout(() => {
        updateGalleryFileTransfer();
        initGalleryControls('filetransfer');
        console.log('‚úÖ –ì–∞–ª–µ—Ä–µ—è FileTransfer –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }, 200);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–∞–ª–µ—Ä–µ–∏ FileManager
    setTimeout(() => {
        updateGalleryFileManager();
        initGalleryControls('filemanager');
        console.log('‚úÖ –ì–∞–ª–µ—Ä–µ—è FileManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }, 300);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–∞–ª–µ—Ä–µ–∏ KeyCombo
    setTimeout(() => {
        updateGalleryKeyCombo();
        initGalleryControls('keycombo');
        console.log('‚úÖ –ì–∞–ª–µ—Ä–µ—è KeyCombo –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }, 400);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–∞–ª–µ—Ä–µ–∏ Security
    setTimeout(() => {
        updateGallerySecurity();
        initGalleryControls('security');
        console.log('‚úÖ –ì–∞–ª–µ—Ä–µ—è Security –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }, 500);
}

// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –≠–õ–ï–ú–ï–ù–¢–û–í –£–ü–†–ê–í–õ–ï–ù–ò–Ø
function initGalleryControls(galleryType) {
    const prevBtn = document.querySelector(`.gallery-nav-${galleryType}.prev`);
    const nextBtn = document.querySelector(`.gallery-nav-${galleryType}.next`);

    if (prevBtn) {
        prevBtn.addEventListener('click', (e) => {
            e.preventDefault();
            switch(galleryType) {
                case 'clipboard':
                    changeImageClipboard('prev');
                    break;
                case 'filetransfer':
                    changeImageFileTransfer('prev');
                    break;
                case 'filemanager':
                    changeImageFileManager('prev');
break;
                case 'keycombo':
                    changeImageKeyCombo('prev');
                    break;
                case 'security':
                    changeImageSecurity('prev');
                    break;
            }
        });

        // Hover —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫
        prevBtn.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-50%) scale(1.1)';
        });
        prevBtn.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(-50%) scale(1)';
        });
    }

    if (nextBtn) {
        nextBtn.addEventListener('click', (e) => {
            e.preventDefault();
            switch(galleryType) {
                case 'clipboard':
                    changeImageClipboard('next');
                    break;
                case 'filetransfer':
                    changeImageFileTransfer('next');
                    break;
                case 'filemanager':
                    changeImageFileManager('next');
                    break;
                case 'keycombo':
                    changeImageKeyCombo('next');
                    break;
                case 'security':
                    changeImageSecurity('next');
                    break;
            }
        });

        // Hover —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫
        nextBtn.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-50%) scale(1.1)';
        });
        nextBtn.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(-50%) scale(1)';
        });
    }

    // Hover —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è –º–∏–Ω–∏–∞—Ç—é—Ä
    document.querySelectorAll(`.thumbnail-${galleryType}`).forEach((thumb, index) => {
        thumb.addEventListener('mouseenter', function() {
            if (!this.classList.contains('active')) {
                this.style.opacity = '1';
                this.style.transform = 'scale(1.05)';
            }
        });

        thumb.addEventListener('mouseleave', function() {
            if (!this.classList.contains('active')) {
                this.style.opacity = '0.7';
                this.style.transform = 'scale(1)';
            }
        });
    });
}

// –ü–û–î–î–ï–†–ñ–ö–ê –ö–õ–ê–í–ò–ê–¢–£–†–´
document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        const zoomedImages = document.querySelectorAll('img[style*="scale(1.8)"]');
        zoomedImages.forEach(img => {
            img.style.transform = 'scale(1)';
            img.style.cursor = 'pointer';
            img.style.zIndex = '1';
        });
        console.log('–ó–∞–∫—Ä—ã—Ç—ã –≤—Å–µ —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
        return;
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≥–∞–ª–µ—Ä–µ—é
    const activeElement = document.activeElement;
    let activeGallery = null;

    if (activeElement.closest('.clipboard-gallery') || activeElement.classList.contains('gallery-nav-clipboard') || activeElement.classList.contains('thumbnail-clipboard')) {
        activeGallery = 'clipboard';
    } else if (activeElement.closest('.filetransfer-gallery') || activeElement.classList.contains('gallery-nav-filetransfer') || activeElement.classList.contains('thumbnail-filetransfer')) {
        activeGallery = 'filetransfer';
    } else if (activeElement.closest('.filemanager-gallery') || activeElement.classList.contains('gallery-nav-filemanager') || activeElement.classList.contains('thumbnail-filemanager')) {
        activeGallery = 'filemanager';
    }

    if (activeGallery) {
        if (e.key === 'ArrowLeft') {
            e.preventDefault();
            switch(activeGallery) {
                case 'clipboard':
                    changeImageClipboard('prev');
                    break;
                case 'filetransfer':
                    changeImageFileTransfer('prev');
                    break;
                case 'filemanager':
                    changeImageFileManager('prev');
                    break;
            }
            console.log(`–ö–ª–∞–≤–∏—à–∞ –í–õ–ï–í–û - ${activeGallery} –≥–∞–ª–µ—Ä–µ—è`);
        } else if (e.key === 'ArrowRight') {
            e.preventDefault();
            switch(activeGallery) {
                case 'clipboard':
                    changeImageClipboard('next');
                    break;
                case 'filetransfer':
                    changeImageFileTransfer('next');
                    break;
                case 'filemanager':
                    changeImageFileManager('next');
                    break;
            }
            console.log(`–ö–ª–∞–≤–∏—à–∞ –í–ü–†–ê–í–û - ${activeGallery} –≥–∞–ª–µ—Ä–µ—è`);
        }
    }
});

// –ü–û–î–î–ï–†–ñ–ö–ê –°–ï–ù–°–û–†–ù–´–• –ñ–ï–°–¢–û–í
let touchStartX = 0;
let touchEndX = 0;
let activeGalleryForTouch = null;

function handleGesture(galleryType) {
    const threshold = 50;
    const diff = touchEndX - touchStartX;
    
    if (Math.abs(diff) > threshold) {
        if (diff > 0) {
            // –°–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ - –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            switch(galleryType) {
                case 'clipboard':
                    changeImageClipboard('prev');
                    break;
                case 'filetransfer':
                    changeImageFileTransfer('prev');
                    break;
                case 'filemanager':
                    changeImageFileManager('prev');
                    break;
            }
            console.log(`–°–≤–∞–π–ø –í–ü–†–ê–í–û - ${galleryType} –≥–∞–ª–µ—Ä–µ—è`);
        } else {
            // –°–≤–∞–π–ø –≤–ª–µ–≤–æ - —Å–ª–µ–¥—É—é—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            switch(galleryType) {
                case 'clipboard':
                    changeImageClipboard('next');
                    break;
                case 'filetransfer':
                    changeImageFileTransfer('next');
                    break;
                case 'filemanager':
                    changeImageFileManager('next');
                    break;
            }
            console.log(`–°–≤–∞–π–ø –í–õ–ï–í–û - ${galleryType} –≥–∞–ª–µ—Ä–µ—è`);
        }
    }
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ touch —Å–æ–±—ã—Ç–∏–π
function initTouchSupport() {
    const galleries = [
        { selector: '.clipboard-gallery .image-wrapper', type: 'clipboard' },
        { selector: '.filetransfer-gallery .image-wrapper', type: 'filetransfer' },
        { selector: '.filemanager-gallery .image-wrapper', type: 'filemanager' }
    ];

    galleries.forEach(gallery => {
        const element = document.querySelector(gallery.selector);
        if (element) {
            element.addEventListener('touchstart', (e) => {
                touchStartX = e.changedTouches[0].screenX;
                activeGalleryForTouch = gallery.type;
            });

            element.addEventListener('touchend', (e) => {
                touchEndX = e.changedTouches[0].screenX;
                if (activeGalleryForTouch === gallery.type) {
                    handleGesture(gallery.type);
                }
            });
        }
    });
}

// –ü–†–ï–î–ó–ê–ì–†–£–ó–ö–ê –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô
function preloadImages() {
    console.log('üñºÔ∏è –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π TeamViewer...');
    
    const allImages = [
        ...imageDataClipboard,
        ...imageDataFileTransfer,
        ...imageDataFileManager
    ];

    let loadedCount = 0;
    const totalImages = allImages.length;

    allImages.forEach(imageData => {
        const img = new Image();
        img.onload = () => {
            loadedCount++;
            console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${loadedCount}/${totalImages}: ${imageData.src}`);
            
            if (loadedCount === totalImages) {
                console.log('üéâ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è TeamViewer –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω—ã!');
            }
        };
        img.onerror = () => {
            console.warn(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${imageData.src}`);
            loadedCount++;
        };
        img.src = imageData.src;
    });
}
// –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –î–õ–Ø –ú–û–ë–ò–õ–¨–ù–´–• –£–°–¢–†–û–ô–°–¢–í
function optimizeForMobile() {
    if (window.innerWidth <= 768) {
        console.log('üì± –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏...');
        
        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
        document.querySelectorAll('.gallery-nav-clipboard, .gallery-nav-filetransfer, .gallery-nav-filemanager').forEach(btn => {
            btn.style.width = '60px';
            btn.style.height = '60px';
            btn.style.fontSize = '24px';
        });

        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –º–∏–Ω–∏–∞—Ç—é—Ä—ã
        document.querySelectorAll('.thumbnail-clipboard, .thumbnail-filetransfer, .thumbnail-filemanager').forEach(thumb => {
            thumb.style.width = '80px';
            thumb.style.height = '60px';
        });

        // –£–º–µ–Ω—å—à–∞–µ–º –≤—ã—Å–æ—Ç—É –≥–∞–ª–µ—Ä–µ–π
        document.querySelectorAll('.image-wrapper').forEach(wrapper => {
            wrapper.style.minHeight = '300px';
        });

        // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        document.querySelectorAll('#mainImageClipboard, #mainImageFileTransfer, #mainImageFileManager').forEach(img => {
            img.style.maxHeight = '250px';
        });
    }
}

// –î–û–ë–ê–í–õ–ï–ù–ò–ï –ü–û–î–°–ö–ê–ó–û–ö
function addTooltips() {
    console.log('üí° –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫...');
    
    // –ü–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const tooltips = [
        { selector: '.gallery-nav-clipboard.prev', text: '–ü—Ä–µ–¥—ã–¥—É—â–∏–π —Å–∫—Ä–∏–Ω—à–æ—Ç –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞ (‚Üê)' },
        { selector: '.gallery-nav-clipboard.next', text: '–°–ª–µ–¥—É—é—â–∏–π —Å–∫—Ä–∏–Ω—à–æ—Ç –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞ (‚Üí)' },
        { selector: '.gallery-nav-filetransfer.prev', text: '–ü—Ä–µ–¥—ã–¥—É—â–∏–π —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–æ–≤ (‚Üê)' },
        { selector: '.gallery-nav-filetransfer.next', text: '–°–ª–µ–¥—É—é—â–∏–π —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–æ–≤ (‚Üí)' },
        { selector: '.gallery-nav-filemanager.prev', text: '–ü—Ä–µ–¥—ã–¥—É—â–∏–π —Å–∫—Ä–∏–Ω—à–æ—Ç —Ñ–∞–π–ª–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (‚Üê)' },
        { selector: '.gallery-nav-filemanager.next', text: '–°–ª–µ–¥—É—é—â–∏–π —Å–∫—Ä–∏–Ω—à–æ—Ç —Ñ–∞–π–ª–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (‚Üí)' }
    ];

    tooltips.forEach(tooltip => {
        const element = document.querySelector(tooltip.selector);
        if (element) {
            element.title = tooltip.text;
        }
    });

    // –ü–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è zoom hints
    document.querySelectorAll('.zoom-hint-clipboard, .zoom-hint-filetransfer, .zoom-hint-filemanager').forEach(hint => {
        hint.title = '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è';
    });
}

// –≠–§–§–ï–ö–¢–´ –ó–ê–ì–†–£–ó–ö–ò
function addLoadingEffects() {
    console.log('‚ú® –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –∑–∞–≥—Ä—É–∑–∫–∏...');
    
    // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    const mainImages = document.querySelectorAll('#mainImageClipboard, #mainImageFileTransfer, #mainImageFileManager');
    
    mainImages.forEach(img => {
        img.addEventListener('loadstart', function() {
            this.style.opacity = '0.5';
            console.log('üîÑ –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏:', this.id);
        });
        
        img.addEventListener('load', function() {
            this.style.opacity = '1';
            console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:', this.id);
        });
        
        img.addEventListener('error', function() {
            this.style.opacity = '1';
            this.alt = '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ';
            console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', this.id);
        });
    });
}

// –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –≠–§–§–ï–ö–¢–´ –î–õ–Ø TEAMVIEWER
function addTeamViewerEffects() {
    console.log('üé® –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ TeamViewer...');
    
    // –ü—É–ª—å—Å–∏—Ä—É—é—â–∏–π —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è placeholder'–æ–≤
    let teamviewerPulseInterval;
    
    function startTeamViewerPulse() {
        const galleries = document.querySelectorAll('.clipboard-gallery, .filetransfer-gallery, .filemanager-gallery');
        let currentIndex = 0;
        
        teamviewerPulseInterval = setInterval(() => {
            // –£–±–∏—Ä–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã —Å –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            galleries.forEach(gallery => {
                gallery.style.boxShadow = '0 4px 15px rgba(0, 114, 255, 0.3)';
            });
            
            // –î–æ–±–∞–≤–ª—è–µ–º TeamViewer —ç—Ñ—Ñ–µ–∫—Ç –∫ —Ç–µ–∫—É—â–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
            if (galleries[currentIndex]) {
                galleries[currentIndex].style.boxShadow = '0 0 30px rgba(0, 114, 255, 0.8)';
                galleries[currentIndex].style.transition = 'all 0.4s ease';
            }
            
            currentIndex = (currentIndex + 1) % galleries.length;
        }, 3000);
    }

    // –ó–∞–ø—É—Å–∫ –ø—É–ª—å—Å–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
    setTimeout(startTeamViewerPulse, 2000);

    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É–ª—å—Å–∞—Ü–∏—é –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏
    document.querySelectorAll('.image-gallery').forEach(gallery => {
        gallery.addEventListener('mouseenter', () => {
            if (teamviewerPulseInterval) {
                clearInterval(teamviewerPulseInterval);
                document.querySelectorAll('.clipboard-gallery, .filetransfer-gallery, .filemanager-gallery').forEach(g => {
                    g.style.boxShadow = '0 4px 15px rgba(0, 114, 255, 0.3)';
                });
            }
        });
    });

    // –≠—Ñ—Ñ–µ–∫—Ç "–≤–æ–ª–Ω—ã" –¥–ª—è –≥–∞–ª–µ—Ä–µ–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    function createWaveEffect() {
        const galleries = document.querySelectorAll('.image-gallery');
        galleries.forEach((gallery, index) => {
            setTimeout(() => {
                gallery.style.boxShadow = '0 0 25px rgba(0, 114, 255, 0.6)';
                setTimeout(() => {
                    gallery.style.boxShadow = '0 4px 15px rgba(0, 114, 255, 0.3)';
                }, 600);
            }, index * 400);
        });
    }

    // –ó–∞–ø—É—Å–∫ –≤–æ–ª–Ω–æ–≤–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
    setTimeout(createWaveEffect, 1500);
}

// –°–ß–ï–¢–ß–ò–ö –ü–†–û–°–ú–û–¢–†–ï–ù–ù–´–• –≠–ö–°–ü–ï–†–ò–ú–ï–ù–¢–û–í
let viewedTeamViewerExperiments = new Set();

function trackExperimentViewing() {
    const observerOptions = {
        threshold: 0.7,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const experimentCard = entry.target;
                const experimentNumber = experimentCard.querySelector('.experiment-number');
                if (experimentNumber) {
                    const number = experimentNumber.textContent.trim();
                    if (!viewedTeamViewerExperiments.has(number)) {
                        viewedTeamViewerExperiments.add(number);
                        
                        // TeamViewer —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–≥–æ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞
                        experimentNumber.style.backgroundColor = '#0072ff';
                        experimentNumber.style.boxShadow = '0 0 15px rgba(0, 114, 255, 0.7)';
                        experimentNumber.style.animation = 'teamviewer-glow 0.8s ease';
                        
                        console.log(`üìä –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç TeamViewer: ${number}`);
                        updateProgressIndicator();
                    }
                }
            }
        });
    }, observerOptions);

    // –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤
    document.querySelectorAll('.experiment-card').forEach(card => {
        observer.observe(card);
    });
}

// –ò–ù–î–ò–ö–ê–¢–û–† –ü–†–û–ì–†–ï–°–°–ê
function updateProgressIndicator() {
    const totalExperiments = document.querySelectorAll('.experiment-card').length;
    const viewedCount = viewedTeamViewerExperiments.size;
    const progressPercent = (viewedCount / totalExperiments) * 100;
    
    let progressBar = document.getElementById('teamviewer-progress-bar');
    if (!progressBar && viewedCount > 0) {
        progressBar = document.createElement('div');
        progressBar.id = 'teamviewer-progress-bar';
        progressBar.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: ${progressPercent}%;
            height: 3px;
            background: linear-gradient(90deg, #0072ff, #4da6ff);
            z-index: 1000;
            transition: width 0.5s ease;
            box-shadow: 0 0 10px rgba(0, 114, 255, 0.5);
        `;
        document.body.appendChild(progressBar);
    } else if (progressBar) {
        progressBar.style.width = progressPercent + '%';
    }
    
    console.log(`üìà –ü—Ä–æ–≥—Ä–µ—Å—Å TeamViewer: ${viewedCount}/${totalExperiments} (${Math.round(progressPercent)}%)`);
}

// –°–ß–ï–¢–ß–ò–ö –í–†–ï–ú–ï–ù–ò –ù–ê –°–¢–†–ê–ù–ò–¶–ï
function addTimeCounter() {
    let startTime = Date.now();
    
    function updateTimeCounter() {
        const timeSpent = Math.floor((Date.now() - startTime) / 1000);
        const minutes = Math.floor(timeSpent / 60);
        const seconds = timeSpent % 60;
        
        let timeDisplay = document.getElementById('teamviewer-time-display');
        if (!timeDisplay) {
            timeDisplay = document.createElement('div');
            timeDisplay.id = 'teamviewer-time-display';
            timeDisplay.style.cssText = `
                position: fixed;
                bottom: 20px;
                right: 20px;
                background: rgba(0, 114, 255, 0.9);
                color: white;
                padding: 10px 15px;
                border-radius: 20px;
                font-size: 0.9em;
                z-index: 999;
                backdrop-filter: blur(10px);
                box-shadow: 0 4px 15px rgba(0, 114, 255, 0.3);
            `;
            document.body.appendChild(timeDisplay);
        }
        
        timeDisplay.textContent = `‚è±Ô∏è ${minutes}:${seconds.toString().padStart(2, '0')}`;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
    setInterval(updateTimeCounter, 1000);
}

// –û–°–ù–û–í–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ TeamViewer Experiments: DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é...');
    
    // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    setTimeout(() => {
        initializeTeamViewerGalleries();
        console.log('‚úÖ –ì–∞–ª–µ—Ä–µ–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    }, 500);
    
    setTimeout(() => {
        initTouchSupport();
        console.log('‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ touch –¥–æ–±–∞–≤–ª–µ–Ω–∞');
    }, 700);
    
    setTimeout(() => {
        preloadImages();
        console.log('‚úÖ –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–ø—É—â–µ–Ω–∞');
    }, 900);
    
    setTimeout(() => {
        optimizeForMobile();
        addTooltips();
        addLoadingEffects();
        console.log('‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ —ç—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã');
    }, 1100);
    
    setTimeout(() => {
        addTeamViewerEffects();
        trackExperimentViewing();
        addTimeCounter();
        console.log('‚úÖ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã TeamViewer –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã');
    }, 1300);
    
    setTimeout(() => {
        console.log('üéâ TeamViewer Experiments –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!');
        console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
        console.log(`   ‚Ä¢ –ì–∞–ª–µ—Ä–µ–π: 3`);
        console.log(`   ‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${imageDataClipboard.length + imageDataFileTransfer.length + imageDataFileManager.length}`);
        console.log(`   ‚Ä¢ –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤: ${document.querySelectorAll('.experiment-card').length}`);
        console.log('üéØ –§—É–Ω–∫—Ü–∏–∏: –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∫–ª–∞–≤–∏—à–∞–º–∏, touch –∂–µ—Å—Ç—ã, zoom, –ø—Ä–æ–≥—Ä–µ—Å—Å —Ç—Ä–µ–∫–∏–Ω–≥');
    }, 1500);
});

// –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
window.addEventListener('resize', optimizeForMobile);

// –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ JavaScript
const style = document.createElement('style');
style.textContent = `
    @keyframes teamviewer-glow {
        0% { box-shadow: 0 0 5px rgba(0, 114, 255, 0.5); }
        50% { box-shadow: 0 0 25px rgba(0, 114, 255, 1), 0 0 35px rgba(0, 114, 255, 0.7); }
        100% { box-shadow: 0 0 15px rgba(0, 114, 255, 0.7); }
    }
    
    .image-gallery img {
        transition: transform 0.3s ease, opacity 0.3s ease;
    }
    
    .gallery-nav-clipboard:hover,
    .gallery-nav-filetransfer:hover,
    .gallery-nav-filemanager:hover {
        background: rgba(0, 114, 255, 1) !important;
    }
    
    .thumbnail-clipboard:hover,
    .thumbnail-filetransfer:hover,
    .thumbnail-filemanager:hover {
        transform: scale(1.05) !important;
        box-shadow: 0 4px 15px rgba(0, 114, 255, 0.4);
    }
`;
document.head.appendChild(style);

console.log('üìù TeamViewer Script –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!');

